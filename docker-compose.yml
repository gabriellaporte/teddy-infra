services:
  backend:
    build:
      context: ../backend
      dockerfile: Dockerfile
    environment:
      - NODE_ENV=${NODE_ENV}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - RABBITMQ_HOST=${RABBITMQ_HOST}
      - RABBITMQ_PORT=${RABBITMQ_PORT}
      - FRONTEND_PORT=${FRONTEND_PORT}
    ports:
      - "${BACKEND_PORT}:3000"
    depends_on:
      - postgres
      - rabbitmq
    volumes:
      - ../backend/src:/app/src
      - ../backend/.env:/app/.env
      - ../backend/tsconfig.json:/app/tsconfig.json
      - ../backend/ormconfig.ts:/app/ormconfig.ts

  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    environment:
      - NODE_ENV=${NODE_ENV}
      - BACKEND_PORT=${BACKEND_PORT}
    ports:
      - "${FRONTEND_PORT}:3000"
    depends_on:
      - backend
    volumes:
      - ../frontend:/app
      - ../frontend/.env:/app/.env
      - ../frontend/tsconfig.json:/app/tsconfig.json
      - /app/node_modules

  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: "${DB_USER:-postgres}"
      POSTGRES_PASSWORD: "${DB_PASSWORD:-postgres}"
      POSTGRES_DB: "${DB_NAME:-postgres}"
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d

  rabbitmq:
    image: rabbitmq:management
    ports:
      - "${RABBITMQ_PORT}:5672"
      - "${RABBITMQ_MANAGEMENT_PORT}:15672"

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "${PROMETHEUS_PORT}:9090"
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    environment:
      - GF_SECURITY_ADMIN_USER="${GRAFANA_USER}"
      - GF_SECURITY_ADMIN_PASSWORD="${GRAFANA_PASSWORD}"
    ports:
      - "${GRAFANA_PORT}:3000"
    depends_on:
      - prometheus

volumes:
  db_data:
